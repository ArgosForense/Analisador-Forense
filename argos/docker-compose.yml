version: '3.8'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    networks:
      - elastic_network
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -vq '\"status\":\"red\"'"]
      interval: 10s
      timeout: 5s
      retries: 5

  gerador_logs:
    build: ./gerador
    container_name: gerador_logs
    networks:
      - elastic_network
    volumes:
      - logs_volume:/var/log/
    ports:
      - "5140:5140/tcp"
      - "5140:5140/udp"
    command: ["python", "-u", "gerador.py", "--tcp-port", "5140", "--udp-port", "5140"]

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.9.0
    container_name: filebeat
    user: root
    networks:
      - elastic_network
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - logs_volume:/var/log/:ro
    command: filebeat -e -strict.perms=false

  backend:
    build: ./backend
    container_name: backend
    ports:
      - "5000:5000"
    networks:
      - elastic_network
    depends_on:
      elasticsearch:
        condition: service_healthy
    
volumes:
  elastic_data:
  logs_volume:

networks:
  elastic_network: